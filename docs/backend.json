{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Hajj Booking Tracker application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "firstName": {
          "type": "string",
          "description": "First name of the user."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the user."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "Booking": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Booking",
      "type": "object",
      "description": "Represents a booking made by a user for a Hajj or Umrah trip.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the booking entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Booking)"
        },
        "isHajjUmrah": {
          "type": "boolean",
          "description": "Indicates whether the booking is for a Hajj or Umrah trip."
        },
        "hotelName": {
          "type": "string",
          "description": "Name of the hotel for the booking."
        },
        "hotelRef": {
          "type": "string",
          "description": "Hotel booking reference or confirmation number."
        },
        "hotelEmail": {
          "type": "string",
          "description": "The official email address of the hotel, parsed from the confirmation email.",
          "format": "email"
        },
        "flightNumber": {
          "type": "string",
          "description": "Flight number for the booking."
        },
        "pnr": {
          "type": "string",
          "description": "Passenger Name Record (PNR) or airline locator code."
        },
        "arrivalAirport": {
          "type": "string",
          "description": "Arrival airport code."
        },
        "flightDate": {
          "type": "string",
          "description": "Flight date.",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the booking (e.g., Pending Verification, ReadyToTrack, Confirmed, Cancelled)."
        },
        "isTestMode": {
          "type": "boolean",
          "description": "Flag indicating whether the booking is in test mode for the flight tracker."
        },
        "testRunCount": {
          "type": "number",
          "description": "Internal counter for test mode runs of the flight tracker."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the booking was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "isHajjUmrah",
        "hotelName",
        "hotelRef",
        "flightNumber",
        "pnr",
        "arrivalAirport",
        "flightDate",
        "status",
        "isTestMode",
        "createdAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.",
          "params": [
            {
              "name": "userId",
              "description": "Unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/bookings/{bookingId}",
        "definition": {
          "entityName": "Booking",
          "schema": {
            "$ref": "#/backend/entities/Booking"
          },
          "description": "Stores all booking information. Access can be restricted based on the userId field within the document.",
          "params": [
            {
              "name": "bookingId",
              "description": "Unique identifier for the booking."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is updated to use a top-level 'bookings' collection. This decouples bookings from users, which is more scalable and simplifies queries for the backend cron jobs (API routes) that need to scan all bookings regardless of the user. User-specific data remains in the '/users/{userId}' path. Security rules will be configured to ensure users can only access their own bookings by checking the 'userId' field within each booking document."
  }
}
